<%- include('../partials/header') %>

  <style>
    
    .quantity-selector {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .quantity-selector button {
        width: 40px;
        height: 40px;
        background-color: #64606025;
        font-size: 20px;
        line-height: 1;
        text-align: center;
        cursor: pointer;
        outline: none;
    }

    .quantity-selector button:active {
        background-color: #f0f0f0;
    }

    #couponSelect{
        padding: 10px 20px;
        outline: none;
        width: 60%;
        margin-right: 10px;
        border: 1px solid #e2e9e1;
    }

    td .tick{
        margin-left: 10px;
        font-size: large;
    }

    .close-mark{
        margin-left: 50px;
        font-size: large;
    }

    .close-mark:hover{
        color: red;
    }

  </style>

    <% if (cart && cart.items && cart.items.length > 0) { %>
    <section id="cart" class="section-p1">
        <table width="100%" style="border-bottom: 1px solid rgba(0, 0, 0, 0.219);">
            <% if (Message) { %>
                <p style="color: rgb(26, 129, 0); font-weight: 700; font-size: 20px;"><%= Message %></p>
            <% } %>
            <thead>
                <tr style="border-top: 1px solid rgba(0, 0, 0, 0.219); border-bottom: 1px solid rgba(0, 0, 0, 0.219);">
                    <td>Remove</td>
                    <td>Image</td>
                    <td>Product</td>
                    <td>Price</td>
                    <td>Quantity</td>
                    <td>Subtotal</td>
                </tr>
            </thead>
            <tbody>
                    <% cart.items.forEach(item => { %>
                        <% if (item.productId) { %>
                            <tr>
                                <td>
                                    <p class="remove-item" data-product-id="<%= item.productId._id %>">
                                        <i class="far fa-times-circle"></i>
                                    </p>
                                </td>
                                <td onclick="window.location.href='/productdetails/<%= item.productId._id %>'">
                                    <img src="<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>" style="width: 50px; height: 50px; cursor: pointer;">
                                </td>
                                <td><%= item.productId.productName %></td>
                                <td>₹<%= item.productId.price %></td>
                                <td>
                                    <div class="quantity-selector" data-product-id="<%= item.productId._id %>" data-product-price="<%= item.productId.price %>">
                                        <button class="decrease">-</button>
                                        <input type="text" class="quantity-input" value="<%= item.quantity %>" 
                                    style=" width: 50px;
                                            height: 40px;
                                            border-radius: 5px;
                                            text-align: center;
                                            font-size: 20px;
                                            margin: 0 5px;
                                            outline: none;"
                                            readonly />
                                        <button class="increase">+</button>
                                    </div>
                                </td>
                                <td>₹<%= item.productId.price * item.quantity %></td>
                            </tr>
                        <% } %>
                    <% }) %>
            </tbody>            
        </table>
    </section>

    <section id="cart-add" class="section-p1">
        <div id="coupon">
            <h3 style="padding-top: 20px;">Apply Coupon</h3>
            <div>
              <select id="couponSelect">
                <option value="">Select Coupon</option>
                <% coupons.forEach(function(coupon) { %>
                  <option value="<%= coupon.couponCode %>">
                    <%= coupon.discount %>% Off - <%= coupon.couponCode %>
                  </option>
                <% }) %>
              </select>
              <button id="applyCouponBtn" class="normal">Apply</button>
              <i class="fa-solid fa-xmark close-mark" id="closeMark" style="display: none; cursor: pointer;"></i>
            </div>
        </div>
      
        <div id="subtotal" style="border-left: 1px solid rgba(0, 0, 0, 0.500); border-right: 1px solid rgba(0, 0, 0, 0.500);">
          <h3>Cart Totals</h3>
          <table>
            <tr>
              <td>Cart Subtotal</td>
              <td id="cart-subtotal"> ₹<%= subtotal.toFixed(2) %> </td>
            </tr>
            <tr>
              <td>Discount</td>
              <td id="cart-discount"> <%= totalDiscount %>% OFF </td>
            </tr>
            <tr>
              <td>Discounted Price</td>
              <td id="discounted-price"> ₹<%= cartTotalDiscountedPrice.toFixed(2) %></td>
            </tr>
            <tr>
              <td>Shipping Fee:</td>
              <td id="shipping-fee" data-shipping-fee="<%= shippingFee %>"> ₹<%= shippingFee %></td>
            </tr>
            <tr id="coupon-applied-row" style="display: none;">
              <td colspan="2" style="color: green; font-weight: 800;">Coupon Applied 
                <i class="fa-solid fa-square-check tick"></i>
              </td>
            </tr>
            <tr>
              <td><strong>Total Amount</strong></td>
              <td id="cart-total"><strong> ₹<%= total.toFixed(2) %></strong></td>
            </tr>
          </table>
          <a href="/checkout"><button class="normal">Proceed to checkout</button></a>
        </div>
      </section>
    <% } else { %>
        <div class="empty_cart">
            <img src="/images/emptyCart.png" alt="">
            <p>Your cart is empty. <a href="/productlist" style="color: #00f;">Go to shop</a></p>
        </div>  
    <% } %>

    <script>

        // quantity updation 
        document.querySelectorAll('.quantity-selector').forEach(selector => {
            const productId = selector.dataset.productId;

            selector.querySelector('.decrease').addEventListener('click', () => {
                updateQuantity(productId, -1);
            });

            selector.querySelector('.increase').addEventListener('click', () => {
                updateQuantity(productId, 1);
            });
        });

        // Sweet alert message for quantity validation
        function updateQuantity(productId, change) {
            const quantityInput = document.querySelector(`.quantity-selector[data-product-id="${productId}"] .quantity-input`);
            let newQuantity = parseInt(quantityInput.value) + change;

            if (newQuantity < 1) {
                newQuantity = 1;
            }

            fetch(`/updatecart/${productId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ quantity: newQuantity })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.reload();
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: data.message,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred while updating the quantity.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            });
        }

        // Sweet alert message for remove product
        document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.remove-item').forEach(button => {
            button.addEventListener('click', async function (event) {
                event.preventDefault();
                const productId = this.getAttribute('data-product-id');

                const result = await Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, remove it!'
                });

                if (result.isConfirmed) {
                    try {
                        const response = await fetch(`/removeitem/${productId}`, {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        if (!response.ok) {
                            throw new Error(`HTTP error! Status: ${response.status}`);
                        }

                        const responseData = await response.text();
                        if (responseData.includes("Product removed")) {
                            Swal.fire({
                                title: 'Removed!',
                                text: 'The product has been removed from your cart.',
                                icon: 'success',
                                showConfirmButton: false,
                                timer: 1000
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            throw new Error('Failed to remove the product.');
                        }

                    } catch (error) {
                        console.error('Error:', error);
                        Swal.fire({
                            title: 'Error!',
                            text: error.message || 'Something went wrong. Please try again later.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                }
            });
        });
    });
        
    
        //select dropdown and close mark icon
        const couponSelect = document.getElementById('couponSelect');
        const closeMark = document.getElementById('closeMark');

            // Store original total amount
            let originalTotalAmount = parseFloat(document.getElementById('cart-total').textContent.replace('₹', ''));

            couponSelect.addEventListener('change', () => {
                if (couponSelect.value) {
                    closeMark.style.display = 'inline';
                }
            });

            // Apply coupon logic
            document.getElementById('applyCouponBtn').addEventListener('click', async () => {
                const couponCode = couponSelect.value;

                if (!couponCode || couponCode === "Select Coupon") {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Invalid Coupon',
                        text: 'Please select a valid coupon',
                        showConfirmButton: false,
                        timer: 1500,
                    });
                    return;
                }

                try {
                    const response = await fetch('/applyCoupon', {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ couponCode }),
                    });

                    const data = await response.json();

                    if (response.ok) {
                        document.getElementById('cart-total').textContent = `₹${data.totalAmount.toFixed(2)}`;
                        document.getElementById('coupon-applied-row').style.display = 'table-row';

                        Swal.fire({
                            icon: 'success',
                            title: 'Coupon Applied',
                            text: data.message,
                            showConfirmButton: false,
                            timer: 1500,
                        });

                        originalTotalAmount = data.totalAmount;
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message,
                            showConfirmButton: false,
                            timer: 1500,
                        });
                    }
                } catch (error) {
                    console.error("Error applying coupon:", error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to apply coupon',
                        showConfirmButton: false,
                        timer: 1500,
                    });
                }
            });

            // Remove coupon logic
            closeMark.addEventListener('click', async () => {
                try {
                    const response = await fetch('/removeCoupon', {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    });

                    if (response.ok) {
                        couponSelect.value = "";
                        closeMark.style.display = 'none';

                        document.getElementById('cart-total').textContent = `₹${originalTotalAmount.toFixed(2)}`;

                        Swal.fire({
                            icon: 'success',
                            title: 'Coupon Removed',
                            text: 'The coupon has been successfully removed',
                            showConfirmButton: false,
                            timer: 1500,
                        });

                        setTimeout(() => {
                            window.location.reload();
                        }, 1500);
                    } else {
                        const data = await response.json();
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message,
                            showConfirmButton: false,
                            timer: 1500,
                        });
                    }
                } catch (error) {
                    console.error("Error removing coupon:", error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to remove coupon',
                        showConfirmButton: false,
                        timer: 1500,
                    });
                }
            });

   </script>
      


<%- include('../partials/footer') %>
