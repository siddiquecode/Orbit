<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Verification</title>
</head>
<body>
    
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            background-size: cover;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            padding: 20px;
            border-radius: 8px;
            background-color: #fff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            width: 300px;
            text-align: center;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h2 {
            margin-bottom: 20px;
        }

        .otp-inputs {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
            gap: 10px;
            width: 100%;
        }

        .otp-inputs input {
            width: 20%; 
            height: 40px;
            text-align: center;
            font-size: 18px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        button {
            width: 50%;
            padding: 10px;
            background-color: #9D51FF;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-top: 10px;
        }

        button:hover {
            background-color: #0056b3;
        }

        #timer {
            margin-top: 10px;
        }

        #resendBtn {
            margin-top: 10px;
            background-color: #9D51FF;
            width: 130px;
        }

        #resendBtn:disabled {
            background-color: #ccc;
        }
    </style>

    <div class="container">
        <h2>OTP Verification</h2>
            <% if (errorMessage) { %>
            <p style="color: red;"><%=errorMessage%></p>
            <% } %>
        <form action="/forgototpPost" method="POST" id="otpForm">
            <div class="otp-inputs">
                <input type="text" maxlength="1" class="otp" name="otp1" >
                <input type="text" maxlength="1" class="otp" name="otp2" >
                <input type="text" maxlength="1" class="otp" name="otp3" >
                <input type="text" maxlength="1" class="otp" name="otp4" >
                <input type="text" maxlength="1" class="otp" name="otp5" >
                <input type="text" maxlength="1" class="otp" name="otp6" >
            </div>
           
            <button type="submit">Verify OTP</button>
        </form>
        <p id="timer">Resend OTP in <span id="time">60</span> seconds</p>
        <form action="/forgotresentOtp" method="post">
        <button id="resendBtn" type="submit" disabled>Resend OTP</button>
        </form>
    </div>

    <script>
        
        document.addEventListener('DOMContentLoaded', (event) => {
            let timer = parseInt(sessionStorage.getItem('otpTimer')) || 60;
            const timerSpan = document.getElementById('time');
            const resendBtn = document.getElementById('resendBtn');

            if (timer === 0) {
                resendBtn.disabled = false;
            }

            timerSpan.textContent = timer;

            if (timer > 0) {
                const interval = setInterval(() => {
                    timer--;
                    timerSpan.textContent = timer;
                    sessionStorage.setItem('otpTimer', timer.toString());

                    if (timer === 0) {
                        clearInterval(interval);
                        resendBtn.disabled = false;
                        sessionStorage.removeItem('otpTimer');
                    }
                }, 1000);
            }

            // Handle OTP input focus
            const otpInputs = document.querySelectorAll('.otp');
            otpInputs.forEach((input, index) => {
                input.addEventListener('input', (e) => {
                    const value = e.target.value;

                    if (!/^\d*$/.test(value)) {
                        e.target.value = '';
                        return;
                    }

                    if (value.length === 1 && index < otpInputs.length - 1) {
                        otpInputs[index + 1].focus();
                    }
                });

                input.addEventListener('keydown', (e) => {
                    if (e.key === 'Backspace' && !e.target.value && index > 0) {
                        otpInputs[index - 1].focus();
                    }
                });
            });

            // Handle form submission
            document.getElementById('otpForm').addEventListener('submit', async (e) => {
                e.preventDefault();

                const otp = Array.from(otpInputs).map(input => input.value).join('');
                const formData = new FormData();
                formData.append('otp', otp);

                for (let i = 0; i < 6; i++) {
                    formData.append(`otp${i + 1}`, otp[i]);
                }

                try {
                    const response = await fetch('/forgototpPost', {
                        method: 'POST',
                        body: new URLSearchParams(formData)
                    });

                    if (response.redirected) {
                        window.location.href = response.url;
                    } else if (!response.ok) {
                        otpInputs.forEach(input => input.value = '');
                        otpInputs[0].focus();
                    }
                } catch (error) {
                    console.error('Error submitting OTP:', error);
                }
            });

            // Handle resend button
            document.querySelector('form[action="/forgotresentOtp"]').addEventListener('submit', (e) => {
                e.preventDefault();
                
                fetch('/forgotresentOtp', {
                    method: 'POST'
                }).then(response => {
                    if (response.ok) {
                        timer = 60;
                        sessionStorage.setItem('otpTimer', timer.toString());
                        timerSpan.textContent = timer;
                        resendBtn.disabled = true;

                        const interval = setInterval(() => {
                            timer--;
                            timerSpan.textContent = timer;
                            sessionStorage.setItem('otpTimer', timer.toString());

                            if (timer === 0) {
                                clearInterval(interval);
                                resendBtn.disabled = false;
                                sessionStorage.removeItem('otpTimer');
                            }
                        }, 1000);
                    }
                }).catch(error => {
                    console.error('Error resending OTP:', error);
                });
            });
        });

    </script>


</body>
</html>