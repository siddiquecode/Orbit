<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Orbit ProductManagement</title>
    <link rel="stylesheet" href="/css/admin.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <link  href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet"/>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    
    <style>

        .add-product-container {
            display: flex;
            justify-content: flex-end;
            margin-bottom: 20px;
            border-right: 1px solid #ddd;
            border-left: 1px solid #ddd;
            border-bottom: 1px solid #ddd;
            padding: 5px;
        }

        .add-product {
            padding: 10px 20px;
            background-color: #15605bd5;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .add-category:hover{
            background-color: #15605B;
        }

        .table-container {
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        table th, table td {
            padding: 10px;
            border: 1px solid #ccc;
            text-align: left;
        }

        table th {
            background-color: #f2f2f2;
        }

        .image {
            width: 50px;
            height: 50px;
            object-fit: cover;
        }

        .edit-product {
            width: 100%;
            height: 40px;
            border-radius: 10px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            padding: 5px;
            color: #ffffff;
            background-color: #007BFF;
        }

        #delete {
            border-radius: 10px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            padding: 5px;
            color: #ffffff;
            background-color: red;
        }
        #delete:hover,
        .edit-product:hover{
            background-color: #ffffff41;
            color: #000000;
        }
        
        #unblock {
            width: 100%;
            height: 50px;
            border-radius: 10px;
            cursor: pointer;
            font-size: 16px;
            padding: 5px;
            background-color:  #00ff00;
        }

        #block {
            width: 100%;
            height: 50px;
            border-radius: 10px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            padding: 5px;
            color: #ffffff;
            background-color:  red;
        }

        #block:hover,#unblock:hover{
            background-color: #ffffff41;
            color: #000000;
        }

        #product{
            background-color: #333;
            border-radius: 5px;
            padding: 10px;
            color: white;
        }

        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.6);
        }

        #imageCropModal {
            z-index: 2000;
        }

        .modal-content {
            background-color: #fefefe;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 600px;
            border-radius: 10px;
            margin: 15px auto;
        }

        .close, .close-crop {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close:hover,
        .close:focus,
        .close-crop:hover,
        .close-crop:focus {
            color: black;
            text-decoration: none;
        }

        .modal-content h2 {
            margin-top: 0;
        }

        .modal-content form {
            display: flex;
            flex-direction: column;
        }

        .modal-content form label {
            margin: 10px 0 5px;
        }

        .modal-content form input,
        .modal-content form select {
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .modal-content form button {
            padding: 10px;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .image-preview-container {
            display: flex;
            flex-wrap: wrap;
            margin-top: 10px;
        }

        .image-preview {
            position: relative;
            margin-right: 10px;
            margin-bottom: 10px;
        }

        .image-preview img {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 5px;
        }

        .image-preview .close-preview {
            position: absolute;
            top: 0;
            right: 0;
            background-color: red;
            color: white;
            border: none;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }

        .crp-btn{
            padding: 10px;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-align: end;
        }

    </style>
    
</head>
<body>

    <div class="container">
        <aside class="sidebar">
            <div class="logo">
                <span>Orbit</span>
            </div>
            <nav class="nav">
                <ul>
                    <li><a href="/admin/getdashboard"><i class="fas fa-th-large"></i> Dashboard</a></li>
                    <li><a href="/admin/getuser"><i class="fas fa-users"></i> User Management</a></li>
                    <li><a id="product" class="active" href="/admin/getproduct"><i class="fas fa-box"></i> Product Management</a></li>
                    <li><a href="/admin/getcategory"><i class="fa-solid fa-list"></i> Category Management</a></li>
                    <li><a href="/admin/getorder"><i class="fas fa-shopping-cart"></i> Order Management</a></li>
                    <li><a href="/admin/getoffer"><i class="fa-solid fa-tag"></i> Offer Module</a></li>
                    <li><a href="/admin/getcoupon"><i class="fa-solid fa-ticket"></i> Coupon Management</a></li>
                    <li><a href="/admin/getreport"><i class="fas fa-chart-bar"></i>Sales Report</a></li>
                </ul>
            </nav>
            <a href="/admin/logout"><button class="logout">Log Out</button></a>
        </aside>
        <main class="main-content">
            <header class="header">
                <h1>Product Management</h1>
            </header>
            <div class="add-product-container">
                <button class="add-product" id="addProductBtn">+ Add product</button>
            </div><br><br><br>

            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>Product NO.</th>
                            <th>Product Name</th>
                            <th>Category</th>
                            <th>Price</th>
                            <th>Stock</th>
                            <th>Description</th>
                            <th>Discount</th>
                            <th>Image</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% product.forEach((product,index)=>{ %>
                        <tr>
                            <td><%= (currentPage - 1) * itemsPerPage + index + 1 %></td>
                            <td><%= product.productName %></td>
                            <td><%= product.category ? product.category.categoryName : 'No Category' %></td>
                            <td><%= product.price %></td>
                            <td><%= product.stock %></td>
                            <td><%= product.description %></td>
                            <td><%= product.discount %></td>
                            <td>
                                <% product.productImage.forEach(image => { %>
                                    <img src="<%= image %>" alt="Product Image" style="width: 50px; height: 50px;">
                                <% }) %>
                            </td>
                            <td>
                                <button class="edit-product" id="editProductBtn" style="margin-bottom: 5px;">Edit</button>
                                    <!-- <form action="/admin/deleteproduct/<%= product._id %>" method="post">
                                        <button type="submit" id="delete" class="action-btn delete">Delete</button>
                                    </form> -->
                                    <% if (product.isBlocked) { %>
                                        <form action="/admin/unblockproduct/<%= product._id %>" method="POST">
                                            <button type="submit" id="unblock" class="action-btn unblock">Unblock</button>
                                        </form>
                                    <% } else { %>
                                        <form action="/admin/blockproduct/<%= product._id %>" method="POST">
                                            <button type="submit" id="block" class="action-btn block">Soft delete</button>
                                        </form>
                                    <% } %>
                            </td>
                        </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
            <div class="pagination">
                <!-- Previous Arrow -->
                <% if (currentPage > 1) { %>
                    <a href="?page=<%= currentPage - 1 %>" class="arrow-btn">
                        <i class="fa-solid fa-arrow-left"></i>
                    </a>
                <% } else { %>
                    <span class="arrow-btn disabled">
                        <i class="fa-solid fa-arrow-left"></i>
                    </span>
                <% } %>
            
                <!-- Next Arrow -->
                <% if (currentPage < totalPages) { %>
                    <a href="?page=<%= currentPage + 1 %>" class="arrow-btn">
                        <i class="fa-solid fa-arrow-right"></i>
                    </a>
                <% } else { %>
                    <span class="arrow-btn disabled">
                        <i class="fa-solid fa-arrow-right"></i>
                    </span>
                <% } %>
            </div>

        </main>
    </div>

    <!--Add product Modal -->
    <div class="modal" id="addProductModal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Add New Product</h2>
                <form id="addProductForm" enctype="multipart/form-data">

                    <div style="color: red;" id="productNameError"></div>
                    <label for="productName">Product Name</label>
                    <input type="text" id="productName" name="productName">

                    <div style="color: red;" id="categoryError"></div>
                    <label for="category">
                        <select name="category" id="category" class="form-select">
                            <option disabled selected>Select Category</option>
                            <% category.forEach(category => { %>
                                <option value="<%= category._id %>"><%= category.categoryName %></option>
                            <% }) %>
                        </select>
                    </label>

                    <div style="color: red;" id="priceError"></div>
                    <label for="price">Price</label>
                    <input type="number" id="price" name="price">

                    <div style="color: red;" id="stockError"></div>
                    <label for="stock">Stock</label>
                    <input type="number" id="stock" name="stock">

                    <div style="color: red;" id="descriptionError"></div>
                    <label for="Description">Description</label>
                    <input type="text" id="description" name="description">

                    <div style="color: red;" id="discountError"></div>
                    <label for="discount">Discount</label>
                    <input type="text" id="discount" name="discount">

                    <div style="color: red;" id="imageError"></div>
                    <label for="image">Image</label>
                    <input type="file" id="image" name="image" multiple>

                    <div id="imagePreviewContainer" class="image-preview-container"></div>
                    <button type="submit">Add Product</button>
                </form>

        </div>
    </div>

    <!-- Image Crop Modal -->
    <div id="imageCropModal" class="modal">
        <div class="modal-content">
            <span class="close-crop">&times;</span>
            <h2>Crop Image</h2>
            <div id="cropContainer">
                <img id="imageToCrop" style="max-width: 100%;" />
            </div>
            <button type="button" id="cancelCropBtn" class="crp-btn">Cancel</button>
            <button type="button" id="saveCroppedImageBtn" class="crp-btn">Save</button>
        </div>
    </div>

    <!--Edit product Modal -->
    <div class="modal" id="editProductModal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Edit Product</h2>
                <form id="editProductForm" enctype="multipart/form-data">
                    <input type="hidden" id="editproductId" name="productId">

                    <div style="color: red;" id="editproductNameError"></div>
                    <label for="editproductName">Product Name</label>
                    <input type="text" id="editproductName" name="productName">

                    <div style="color: red;" id="editcategoryError"></div>
                    <label for="editcategory">
                        <select name="category" id="editcategory" class="form-select">
                            <option disabled selected>Select Category</option>
                            <% category.forEach(category => { %>
                                <option value="<%= category._id %>"><%= category.categoryName %></option>
                            <% }) %>
                        </select>
                    </label>

                    <div style="color: red;" id="editpriceError"></div>
                    <label for="editprice">Price</label>
                    <input type="number" id="editprice" name="price">

                    <div style="color: red;" id="editstockError"></div>
                    <label for="editstock">Stock</label>
                    <input type="number" id="editstock" name="stock">

                    <div style="color: red;" id="editdescriptionError"></div>
                    <label for="editDescription">Description</label>
                    <input type="text" id="editdescription" name="description">

                    <div style="color: red;" id="editdiscountError"></div>
                    <label for="editdiscount">Discount</label>
                    <input type="text" id="editdiscount" name="discount">

                    <div style="color: red;" id="editimageError"></div>
                    <label for="editimage">Image</label>
                    <input type="file"  id="editproductImage" name="productImage" multiple>


                    <div id="editImagePreviewContainer" class="image-preview-container"></div>
                    <button type="submit">Update Product</button>
                </form>
        </div>
    </div>

    <script>


        /* -------------------------------Add product---------------------------- */


    const modal = document.getElementById('addProductModal');
    const btn = document.getElementById('addProductBtn');
    const close = document.getElementsByClassName('close')[0];
    const addProductForm = document.getElementById('addProductForm');
    const imageInput = document.getElementById('image');
    const imagePreviewContainer = document.getElementById('imagePreviewContainer');

    btn.onclick = function() {
        modal.style.display = "block";
    }

    close.onclick = function() {
        modal.style.display = "none";
        addProductForm.reset();
        clearImagePreviews();
    }

    imageInput.addEventListener('change', function() {
        clearImagePreviews();
        Array.from(this.files).forEach(file => {
            const reader = new FileReader();
            reader.onload = function(e) {
                const previewDiv = document.createElement('div');
                previewDiv.classList.add('image-preview');

                const img = document.createElement('img');
                img.src = e.target.result;

                const closeButton = document.createElement('button');
                closeButton.classList.add('close-preview');
                closeButton.innerHTML = '&times;';
                closeButton.onclick = function() {
                    previewDiv.remove();
                    removeFile(file);
                };

                previewDiv.appendChild(img);
                previewDiv.appendChild(closeButton);
                imagePreviewContainer.appendChild(previewDiv);
            };
            reader.readAsDataURL(file);
        });
    });

    // Clear image previews
    function clearImagePreviews() {
        imagePreviewContainer.innerHTML = '';
    }

    // Remove file from input file
    function removeFile(fileToRemove) {
        const dt = new DataTransfer();
        Array.from(imageInput.files).forEach(file => {
            if (file !== fileToRemove) {
                dt.items.add(file);
            }
        });
        imageInput.files = dt.files;
    }

    // Handle add product form submission
    addProductForm.addEventListener('submit', async function(event) {
    event.preventDefault();
    let form = event.target;
    let formData = new FormData(form);

    const productName = formData.get('productName');
    const category = formData.get('category');
    const price = formData.get('price');
    const stock = formData.get('stock');
    const description = formData.get('description');
    const discount = formData.get('discount').trim();
    const images = formData.getAll('image');
    const validImageTypes = ['image/jpeg', 'image/png', 'image/jpg', 'image/jfif', 'image/webp'];

    let error = false;

    function setError(elementId, message) {
        const element = document.getElementById(elementId);
        element.innerText = message;
        element.style.display = 'block';
        setTimeout(() => {
            element.style.display = 'none';
        }, 4000);
    }

    // Clear previous errors
    document.getElementById('productNameError').innerText = "";
    document.getElementById('categoryError').innerText = "";
    document.getElementById('priceError').innerText = "";
    document.getElementById('stockError').innerText = "";
    document.getElementById('descriptionError').innerText = "";
    document.getElementById('discountError').innerText = "";
    document.getElementById('imageError').innerText = "";

    if (!productName || !productName.trim()) {
        error = true;
        setError('productNameError', 'Please enter a valid product name without spaces before and after');
    }else if (!category) {
        error = true;
        setError('categoryError', 'Please select a category');
    }else if (!price || price <= 0) {
        error = true;
        setError('priceError', 'Please enter a valid price');
    }else if (!stock || stock <= 0) {
        error = true;
        setError('stockError', 'Please enter a valid stock amount');
    }else if (!description || !description.trim()) {
        error = true;
        setError('descriptionError', 'Description cannot be empty or contain only spaces');
    }else if (!discount || discount <= 0 || discount >= 100) {
        error = true;
        setError('discountError', 'Please enter a valid discount');
    }else if (!images || images.length === 0) {
        error = true;
        setError('imageError', 'Please select an image');
    } else {
        images.forEach(image => {
            if (!validImageTypes.includes(image.type)) {
                error = true;
                setError('imageError', 'Please upload a valid image (JPEG, PNG, JPG, JFIF, WEBP)');
            }
        });
    }

    if (!error) {
        try {
            const response = await fetch('/admin/addproduct', {
                method: 'POST',
                body: formData
            });

            const result = await response.json();
            console.log('result', result);

            if (result.error) {
                console.log('The result.error', result.error);
                displayError(result.error);
            } else if (result.success) {
                modal.style.display = 'none';
                location.reload();
            }
        } catch (error) {
            console.log("Error:", error);
        }
    }
});

function displayError(errorMessage) {
    const errorElements = {
        productName: document.getElementById('productNameError'),
        category: document.getElementById('categoryError'),
        price: document.getElementById('priceError'),
        stock: document.getElementById('stockError'),
        description: document.getElementById('descriptionError'),
        discount: document.getElementById('discountError'),
        image: document.getElementById('imageError')
    };

    // Clear previous errors
    Object.values(errorElements).forEach(el => el.textContent = '');

    if (errorMessage.includes("product name")) {
        errorElements.productName.textContent = errorMessage;
    } else if (errorMessage.includes("category")) {
        errorElements.category.textContent = errorMessage;
    } else if (errorMessage.includes("price")) {
        errorElements.price.textContent = errorMessage;
    } else if (errorMessage.includes("stock")) {
        errorElements.stock.textContent = errorMessage;
    } else if (errorMessage.includes("description")) {
        errorElements.description.textContent = errorMessage;
    } else if (errorMessage.includes("discount")) {
        errorElements.discount.textContent = errorMessage;
    } else if (errorMessage.includes("image")) {
        errorElements.image.textContent = errorMessage;
    }
}


    
    /* ------------------------Image crop--------------------------- */

    const imageCropModal = document.getElementById('imageCropModal');
    const closeCrop = document.getElementsByClassName('close-crop')[0];
    const saveCroppedImageBtn = document.getElementById('saveCroppedImageBtn');
    const cancelCropBtn = document.getElementById('cancelCropBtn');
    const imageToCrop = document.getElementById('imageToCrop');
    let cropper;
    let currentImagePreview;
    let currentFileInput;
    let croppedFiles = [];

    function openCropModal(imagePreview, fileInput) {
        imageCropModal.style.display = 'block';
        imageToCrop.src = imagePreview.src;

        cropper = new Cropper(imageToCrop, {
            aspectRatio: 1,
            viewMode: 1,
            autoCropArea: 1,
        });

        currentImagePreview = imagePreview;
        currentFileInput = fileInput;
    }

    document.getElementById('imagePreviewContainer').addEventListener('click', function(event) {
        if (event.target.tagName === 'IMG') {
            openCropModal(event.target, document.getElementById('image'));
        }
    });

    document.getElementById('editImagePreviewContainer').addEventListener('click', function(event) {
        if (event.target.tagName === 'IMG') {
            openCropModal(event.target, document.getElementById('editproductImage'));
        }
    });

    closeCrop.onclick = function() {
        imageCropModal.style.display = 'none';
        if (cropper) {
            cropper.destroy();
            cropper = null;
        }
    };

    cancelCropBtn.onclick = function() {
        imageCropModal.style.display = 'none';
        if (cropper) {
            cropper.destroy();
            cropper = null;
        }
    };

    saveCroppedImageBtn.onclick = function() {
        const canvas = cropper.getCroppedCanvas();
        canvas.toBlob(function(blob) {
            const url = URL.createObjectURL(blob);

            currentImagePreview.src = url;

            const croppedFile = new File([blob], 'cropped-image.png', { type: 'image/png' });

            croppedFiles.push(croppedFile);

            const dt = new DataTransfer();

            croppedFiles.forEach(file => dt.items.add(file));

            currentFileInput.files = dt.files;

            imageCropModal.style.display = 'none';
            cropper.destroy();
            cropper = null;
        });
    };


    /* --------------------------Edit product------------------------- */

    const editProductModal = document.getElementById('editProductModal');
    const editProductBtn = document.querySelectorAll('.edit-product');
    const closeEditBtn = document.getElementsByClassName('close')[1];
    const editProductForm = document.getElementById('editProductForm');
    const EditimageInput = document.getElementById('editproductImage');
    const EditimagePreviewContainer = document.getElementById('editImagePreviewContainer');

    editProductBtn.forEach(button => {
        button.addEventListener('click', function() {
            const row = this.closest('tr');
            const productId = row.querySelector('form').action.split('/').pop();
            const productName = row.querySelector('td:nth-child(2)').textContent.trim();
            const category = row.querySelector('td:nth-child(3)').textContent.trim();
            const price = row.querySelector('td:nth-child(4)').textContent.trim();
            const stock = row.querySelector('td:nth-child(5)').textContent.trim();
            const description = row.querySelector('td:nth-child(6)').textContent.trim();
            const discount = row.querySelector('td:nth-child(7)').textContent.trim();
            const images = row.querySelectorAll('td:nth-child(8) img');
            const imageSrcs = Array.from(images).map(img => img.src);

            document.getElementById('editproductId').value = productId;
            document.getElementById('editproductName').value = productName;
            document.getElementById('editprice').value = price;
            document.getElementById('editstock').value = stock;
            document.getElementById('editdescription').value = description;
            document.getElementById('editdiscount').value = discount;

            const categorySelect = document.getElementById('editcategory');
            const options = categorySelect.options;

            categorySelect.value = "";

            for (let i = 0; i < options.length; i++) {
                if (options[i].text === category) {
                    options[i].selected = true;
                    break;
                }
            }

            clearEditImagePreviews();

            imageSrcs.forEach(src => {
                const imagePreview = document.createElement('div');
                imagePreview.classList.add('image-preview');
                const img = document.createElement('img');
                img.src = src;
                img.alt = 'Product Images';

                const closeButton = document.createElement('button');
                closeButton.classList.add('close-preview');
                closeButton.innerHTML = '&times;';
                closeButton.onclick = function(){
                    imagePreview.remove();
                }
                imagePreview.appendChild(img);
                imagePreview.appendChild(closeButton);
                EditimagePreviewContainer.appendChild(imagePreview);
            });

            editProductModal.style.display = 'block';
        });
    });

    closeEditBtn.onclick = function() {
        editProductModal.style.display = "none";
        editProductForm.reset();
        clearEditImagePreviews();
    };

    // Image preview
    EditimageInput.addEventListener('change', function() {
        clearImagePreviews();

        Array.from(this.files).forEach(file => {
            const reader = new FileReader();
            reader.onload = function(e) {
                const previewDiv = document.createElement('div');
                previewDiv.classList.add('image-preview');

                const img = document.createElement('img');
                img.src = e.target.result;

                const closeButton = document.createElement('button');
                closeButton.classList.add('close-preview');
                closeButton.innerHTML = '&times;';
                closeButton.onclick = function() {
                    previewDiv.remove();
                    removeFile(file);
                };

                previewDiv.appendChild(img);
                previewDiv.appendChild(closeButton);
                EditimagePreviewContainer.appendChild(previewDiv);
            };
            reader.readAsDataURL(file);
        });
    });

    function clearEditImagePreviews() {
        EditimagePreviewContainer.innerHTML = '';
    }

    // Remove file input file
    function removeFile(fileToRemove) {
        const dt = new DataTransfer();
        Array.from(EditimageInput.files).forEach(file => {
            if (file !== fileToRemove) {
                dt.items.add(file);
            }
        });
        EditimageInput.files = dt.files;
    }

    // Handle edit product form submission
    editProductForm.addEventListener('submit', async function(event) {
    event.preventDefault();
    let form = event.target;
    const formData = new FormData(form);
    const productId = document.getElementById('editproductId').value;

    const editproductName = formData.get('productName');
    const editcategory = formData.get('category');
    const editprice = formData.get('price');
    const editstock = formData.get('stock');
    const editdescription = formData.get('description');
    const editdiscount = formData.get('discount').trim();
    const imageFiles = formData.getAll('productImage');
    const validImageTypes = ['image/jpeg', 'image/png', 'image/jpg', 'image/jfif', 'image/webp'];

    let error = false;

    function setError(elementId, message) {
        const element = document.getElementById(elementId);
        element.innerText = message;
        element.style.display = 'block';
        setTimeout(() => {
            element.style.display = 'none';
        }, 4500);
    }

    document.getElementById('editproductNameError').innerText = '';
    document.getElementById('editcategoryError').innerText = '';
    document.getElementById('editpriceError').innerText = '';
    document.getElementById('editstockError').innerText = '';
    document.getElementById('editdescriptionError').innerText = '';
    document.getElementById('editdiscountError').innerText = '';
    document.getElementById('editimageError').innerText = '';

    if (!editproductName || !editproductName.trim()) {
        error = true;
        setError('editproductNameError', 'Please enter a valid product name without spaces before and after');
    } else if (!editcategory || editcategory === 'Select Category') {
        error = true;
        setError('editcategoryError', 'Please select a category');
    } else if (!editprice || editprice <= 0) {
        error = true;
        setError('editpriceError', 'Please enter a valid price');
    } else if (!editstock || editstock <= 0) {
        error = true;
        setError('editstockError', 'Please enter a valid stock amount');
    } else if (!editdescription || !editdescription.trim()) {
        error = true;
        setError('editdescriptionError', 'Description cannot be empty or contain only spaces');
    } else if (!editdiscount || editdiscount <= 0 || editdiscount >= 100) {
        error = true;
        setError('editdiscountError', 'Please enter a valid discount');
    }

    if (imageFiles.length > 0) {
        imageFiles.forEach(image => {
            if (!validImageTypes.includes(image.type)) {
                error = true;
                setError('editimageError', 'Please upload a valid image (JPEG, PNG, JPG, JFIF, WEBP)');
            }
        });
    }

    if (!error) {
        try {
            const response = await fetch(`/admin/editproduct/${productId}`, {
                method: 'PUT',
                body: formData
            });

            if (response.ok) {
                const result = await response.json();
                editProductModal.style.display = 'none';
                location.reload();
            } else {
                console.error('Error updating product');
                const result = await response.json();
                console.error(result.message);
            }
        } catch (error) {
            console.log("Error:", error);
        }
    }
});



    </script>
</body>
</html>
